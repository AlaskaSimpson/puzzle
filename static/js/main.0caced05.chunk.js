(this.webpackJsonppuzzle=this.webpackJsonppuzzle||[]).push([[0],{14:function(e,t,s){},9:function(e,t,s){"use strict";s.r(t);var n=s(8),i=s(3),r=s(4),a=s(6),c=s(5),l=s(1),o=s.n(l),u=s(7),m=s.n(u),h=(s(14),s(0));function d(e){var t="tile tilenumber"+e.value;return Object(h.jsx)("button",{className:t,onClick:e.onClick})}var v=function(e){Object(a.a)(s,e);var t=Object(c.a)(s);function s(e){var n;return Object(i.a)(this,s),(n=t.call(this,e)).state={tiles:O(),numbermoves:0,maxmoves:300,correct:0},n}return Object(r.a)(s,[{key:"setdifficulty",value:function(e){this.state.numbermoves>0?alert("Start a New Game to Change Difficulty"):0===e?this.setState({maxmoves:100}):1===e?this.setState({maxmoves:200}):this.setState({maxmoves:300})}},{key:"getemptytile",value:function(){return this.state.tiles.indexOf(null)}},{key:"swaptiles",value:function(e,t){var s=this.state.tiles.slice(),n=s[e];s[e]=s[t],s[t]=n,this.setState({tiles:s,correct:this.getnumbercorrect(s)})}},{key:"getnumbercorrect",value:function(e){for(var t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,null],s=[],n=0;n<t.length;n++)e[n]===t[n]&&s.push(s[n]);return s.length}},{key:"handleClick",value:function(e){if(!j(this.state.correct)&&f(this.state.numbermoves,this.state.maxmoves)){var t=x(this.getemptytile()).includes(e),s=this.state.numbermoves+1;t&&(this.setState({numbermoves:s}),this.swaptiles(e,this.getemptytile()))}}},{key:"renderTile",value:function(e){var t=this;return Object(h.jsx)(d,{value:this.state.tiles[e],position:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15][e],onClick:function(){return t.handleClick(e)}})}},{key:"renderRow",value:function(e){var t=4*e;return Object(h.jsxs)("div",{className:"board-row",children:[this.renderTile(t),this.renderTile(t+1),this.renderTile(t+2),this.renderTile(t+3)]})}},{key:"NewGame",value:function(){this.setState({tiles:O(),numbermoves:0,correct:0})}},{key:"render",value:function(){var e,t,s,n,i=this,r=!1;return j(this.state.correct)?(e="GAME WON: in "+this.state.numbermoves+" moves",s=null,n=null,r=!0):f(this.state.numbermoves,this.state.maxmoves)?(e="Number of Tiles Correct: "+this.state.correct,t="Moves Made: "+this.state.numbermoves):(e="GAME OVER: no more moves",r=!0),this.state.maxmoves-this.state.numbermoves<30&&!r?(n=null,s="Moves Remaining: "+(this.state.maxmoves-this.state.numbermoves)):r||(s=null,n="Maximum Moves: "+this.state.maxmoves),Object(h.jsxs)("div",{children:[Object(h.jsx)("div",{className:"status",children:e}),Object(h.jsx)("div",{className:"status",children:t}),Object(h.jsx)("div",{className:"status",children:n}),Object(h.jsx)("div",{className:"status low-moves",children:s}),Object(h.jsxs)("div",{className:"board",children:[this.renderRow(0),this.renderRow(1),this.renderRow(2),this.renderRow(3)]}),Object(h.jsxs)("div",{className:"options",children:[Object(h.jsx)("button",{className:"new-game",onClick:function(){return i.NewGame()},children:"New Game"}),Object(h.jsx)("br",{}),Object(h.jsx)("button",{className:"setting",onClick:function(){return i.setdifficulty(2)},children:"Easy"}),Object(h.jsx)("button",{className:"setting",onClick:function(){return i.setdifficulty(1)},children:"Medium"}),Object(h.jsx)("button",{className:"setting",onClick:function(){return i.setdifficulty(0)},children:"Hard"})]})]})}}]),s}(o.a.Component),b=function(e){Object(a.a)(s,e);var t=Object(c.a)(s);function s(){return Object(i.a)(this,s),t.apply(this,arguments)}return Object(r.a)(s,[{key:"render",value:function(){return Object(h.jsxs)("body",{children:[Object(h.jsx)("div",{className:"game-title",children:Object(h.jsx)("h1",{children:"15 Tile Puzzle"})}),Object(h.jsxs)("div",{className:"game",children:[Object(h.jsx)("div",{className:"column game-info",children:Object(h.jsxs)("div",{className:"info-box",children:[Object(h.jsx)("h2",{children:"How to Play"}),Object(h.jsx)("p",{children:" The aim of the game is to rearrange the tiles into numerical order, with the empty space on the bottom right"}),Object(h.jsx)("p",{children:" Click on a tile to move it. It is only possible to move tiles that are next to the empty space"}),Object(h.jsx)("p",{children:" Too easy? Select a difficulty to reduce the number of moves you have to solve the puzzle"}),Object(h.jsx)("p",{children:" Use the New Game button, to get a freshly shuffled board"})]})}),Object(h.jsx)("div",{className:"column game-board",children:Object(h.jsx)(v,{})})]})]})}}]),s}(o.a.Component);function j(e){return 16===e}function f(e,t){return e<=t}function x(e){var t,s=[];t=e%4===0?[e+1,e-4,e+4]:e%4===3?[e-1,e-4,e+4]:[e-1,e+1,e-4,e+4];var i,r=Object(n.a)(t);try{for(r.s();!(i=r.n()).done;){var a=i.value;a>=0&&a<=15&&s.push(a)}}catch(c){r.e(c)}finally{r.f()}return s}function O(){var e,t=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,null];for(e=0;e<500;e++){var s,n=t.indexOf(null),i=(s=x(n))[Math.floor(Math.random()*s.length)],r=t[i];t[i]=null,t[n]=r}return t}m.a.render(Object(h.jsx)(b,{}),document.getElementById("root"))}},[[9,1,2]]]);
//# sourceMappingURL=main.0caced05.chunk.js.map